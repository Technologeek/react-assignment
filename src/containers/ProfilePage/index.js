import React, { Component } from 'react'
import { Grid } from 'semantic-ui-react'
import { connect } from 'react-redux'
import axios from 'axios'
import UIAvatar from 'react-ui-avatars'
import { Card, Icon, Image } from 'semantic-ui-react'
import history from '../../utils/history'
import './style.css'
import PropTypes from 'prop-types'

class ProfilePage extends Component {
  constructor(props) {
    super(props)
    this.state = {
      userName: '',
      userEmail: '',
    }
  }
  componentDidMount(match) {
    let url = `${process.env.REACT_APP_JSON_BASE_URL}users/${this.props.userId}`
    axios.get(url).then(response => {
      if (response.data)
        this.setState({
          userName: response.data && response.data.username,
          userEmail: response.data && response.data.email,
        })
    })
  }
  render() {
    const isLoggedIn = Object.keys(this.props.user).length !== 0
    if (!isLoggedIn) {
      history.push('/')
    }
    console.log(this.props)
    const { userName, userEmail } = this.state
    return (
      <Grid columns={1} divided className="segment centered">
        <Grid.Row className="row_grid">
          <Grid.Column>
            <Card>
              <UIAvatar
                name={userName}
                size={512}
                length="2"
                bold={true}
                className="imagefix"
              />
              <Card.Content>
                <Card.Header>{userName}</Card.Header>
                <Card.Meta>
                  <span className="date">{userEmail}</span>
                </Card.Meta>
                <Card.Description>
                  {userName} is an emerging developer in Waterford.
                </Card.Description>
              </Card.Content>
              <Card.Content extra>
                <a>
                  <Icon name="user" />
                  We autogenerated your Avatar using your Name!
                </a>
              </Card.Content>
            </Card>
          </Grid.Column>
        </Grid.Row>
      </Grid>
    )
  }
}
ProfilePage.propTypes = {
  userName: PropTypes.string.isRequired,
  userEmail: PropTypes.string.isRequired,
}
ProfilePage.defaultProps = {
  userName: 'Unknown',
  userEmail: 'Unknown',
}
const mapStateToProps = state => {
  return {
    user: state.user,
    userId: state.id,
  }
}
export default connect(
  mapStateToProps,
  null
)(ProfilePage)
